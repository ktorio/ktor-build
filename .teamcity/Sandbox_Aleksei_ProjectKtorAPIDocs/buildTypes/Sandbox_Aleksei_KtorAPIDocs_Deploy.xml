<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2020.1/project-config.xsd">
  <name>Deploy website</name>
  <description />
  <settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_1" name="Generate static files for version" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[set -e

KTOR_VERSION="$(cat ktor_version.txt)"
DOMAIN="$(cat CNAME)"
WORK_DIR="output"

# Prepare working directory
[ ! -e "${WORK_DIR}" ] || rm -rf "${WORK_DIR}"
cp -rf template "${WORK_DIR}"
cat > "${WORK_DIR}/_config.yml" <<- EOF

title: "Ktor $KTOR_VERSION"
description: Asynchronous framework for web applications
url: "https://$DOMAIN"
baseurl: /$KTOR_VERSION/

source: .
destination: ../$KTOR_VERSION

ktor_version: $KTOR_VERSION

markdown: kramdown
exclude:
  - Gemfile
  - Gemfile.lock
plugins:
  - jekyll-sitemap

EOF

cp -rf apidoc/* "${WORK_DIR}"

# Prepare result directory
mkdir -p "${KTOR_VERSION}"

JEKYLL_SCRIPT="${WORK_DIR}/jekyll.sh"
cat > "${JEKYLL_SCRIPT}" <<- EOF
#!/bin/bash
USER=$1
GROUP=$2

chown -R jekyll:jekyll "../${KTOR_VERSION}"
chown -R jekyll:jekyll .
jekyll b
chown -R "${USER}:${GROUP}" "../${KTOR_VERSION}"
chown -R "${USER}:${GROUP}" .
EOF

chmod +x "${JEKYLL_SCRIPT}"

# docker run -v "${PWD}:/srv/jekyll" -v "${PWD}/vendor/bundle:/usr/local/bundle" -w "/srv/jekyll/${WORK_DIR}" jekyll/jekyll ./jekyll.sh "$(id -u)" "$(id -g)"

# Generate files via Jekyll
docker run -v "${PWD}:/srv/jekyll" -v "${PWD}/vendor/bundle:/usr/local/bundle" -w "/srv/jekyll" jekyll/jekyll chown -R jekyll:jekyll "${KTOR_VERSION}"
docker run -v "${PWD}:/srv/jekyll" -v "${PWD}/vendor/bundle:/usr/local/bundle" -w "/srv/jekyll/${WORK_DIR}" jekyll/jekyll chown -R jekyll:jekyll .
docker run -v "${PWD}:/srv/jekyll" -v "${PWD}/vendor/bundle:/usr/local/bundle" -w "/srv/jekyll/${WORK_DIR}" jekyll/jekyll jekyll b $*
docker run -v "${PWD}:/srv/jekyll" -v "${PWD}/vendor/bundle:/usr/local/bundle" -w "/srv/jekyll" jekyll/jekyll chown -R "$(id -u):$(id -g)" "$KTOR_VERSION"
docker run -v "${PWD}:/srv/jekyll" -v "${PWD}/vendor/bundle:/usr/local/bundle" -w "/srv/jekyll/${WORK_DIR}" jekyll/jekyll chown -R "$(id -u):$(id -g)" .

rm -f "${KTOR_VERSION}/index.yml"

java -jar tools/apidoc-indexer.jar "${KTOR_VERSION}"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Sandbox_Aleksei_VCSAPIDocs" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_8" sourceBuildTypeId="Sandbox_Aleksei_KtorAPIDocs_Dokka" cleanDestination="false">
        <revisionRule name="lastSuccessful" revision="latest.lastSuccessful" />
        <artifact sourcePath="apidoc.zip!**=&gt;apidoc&#xD;&#xA;ktor_version.txt" />
      </dependency>
    </artifact-dependencies>
    <dependencies>
      <depend-on sourceBuildTypeId="Sandbox_Aleksei_KtorAPIDocs_Dokka">
        <options>
          <option name="run-build-if-dependency-failed" value="RUN_ADD_PROBLEM" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

